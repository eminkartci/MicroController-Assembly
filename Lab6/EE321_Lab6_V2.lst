;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 5/15/2021 9:32:40 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2878      	GOTO       120
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AB      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AA      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;EE321_Lab6_V2.c,160 :: 		void interrupt(){
;EE321_Lab6_V2.c,161 :: 		increment();
0x000D	0x2056      	CALL       _increment
;EE321_Lab6_V2.c,164 :: 		TMR1L = 0xDB;	// Timer starts from counting
0x000E	0x30DB      	MOVLW      219
0x000F	0x008E      	MOVWF      TMR1L
;EE321_Lab6_V2.c,165 :: 		TMR1H = 0x0B;	// Upper Limit of the count
0x0010	0x300B      	MOVLW      11
0x0011	0x008F      	MOVWF      TMR1H
;EE321_Lab6_V2.c,167 :: 		PIR1.TMR1IF = 0;
0x0012	0x100C      	BCF        PIR1, 0
;EE321_Lab6_V2.c,169 :: 		}
L_end_interrupt:
L__interrupt22:
0x0013	0x0820      	MOVF       32, 0
0x0014	0x00F0      	MOVWF      R0
0x0015	0x082A      	MOVF       ___savePCLATH, 0
0x0016	0x008A      	MOVWF      PCLATH
0x0017	0x0E2B      	SWAPF      ___saveSTATUS, 0
0x0018	0x0083      	MOVWF      STATUS
0x0019	0x0EFF      	SWAPF      R15, 1
0x001A	0x0E7F      	SWAPF      R15, 0
0x001B	0x0009      	RETFIE
; end of _interrupt
_combineNumbers:
;EE321_Lab6_V2.c,148 :: 		int combineNumbers(int first4,int last4){
;EE321_Lab6_V2.c,149 :: 		return (first4<<4) + last4;
0x001C	0x3004      	MOVLW      4
0x001D	0x1283      	BCF        STATUS, 5
0x001E	0x1303      	BCF        STATUS, 6
0x001F	0x00F2      	MOVWF      R2
0x0020	0x0834      	MOVF       FARG_combineNumbers_first4, 0
0x0021	0x00F0      	MOVWF      R0
0x0022	0x0835      	MOVF       FARG_combineNumbers_first4+1, 0
0x0023	0x00F1      	MOVWF      R0+1
0x0024	0x0872      	MOVF       R2, 0
L__combineNumbers18:
0x0025	0x1903      	BTFSC      STATUS, 2
0x0026	0x282C      	GOTO       L__combineNumbers19
0x0027	0x0DF0      	RLF        R0, 1
0x0028	0x0DF1      	RLF        R0+1, 1
0x0029	0x1070      	BCF        R0, 0
0x002A	0x3EFF      	ADDLW      255
0x002B	0x2825      	GOTO       L__combineNumbers18
L__combineNumbers19:
0x002C	0x0836      	MOVF       FARG_combineNumbers_last4, 0
0x002D	0x07F0      	ADDWF      R0, 1
0x002E	0x0837      	MOVF       FARG_combineNumbers_last4+1, 0
0x002F	0x1803      	BTFSC      STATUS, 0
0x0030	0x3E01      	ADDLW      1
0x0031	0x07F1      	ADDWF      R0+1, 1
;EE321_Lab6_V2.c,150 :: 		}
L_end_combineNumbers:
0x0032	0x0008      	RETURN
; end of _combineNumbers
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0033	0x1283      	BCF        STATUS, 5
0x0034	0x1303      	BCF        STATUS, 6
0x0035	0x0829      	MOVF       ___DoICPAddr+1, 0
0x0036	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0037	0x0828      	MOVF       ___DoICPAddr, 0
0x0038	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0039	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x003A	0x2033      	CALL       _____DoICP
0x003B	0x118A      	BCF        PCLATH, 3
0x003C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x003D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x003E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x003F	0x0AA8      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0040	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0041	0x0AA9      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0042	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0043	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0044	0x283A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0045	0x0008      	RETURN
; end of ___CC2DW
_assignValues:
;EE321_Lab6_V2.c,152 :: 		void assignValues(int left,int middle,int right){
;EE321_Lab6_V2.c,154 :: 		PORTA = right;				// I'm using only last 4 digits
0x0046	0x1283      	BCF        STATUS, 5
0x0047	0x1303      	BCF        STATUS, 6
0x0048	0x0832      	MOVF       FARG_assignValues_right, 0
0x0049	0x0085      	MOVWF      PORTA
;EE321_Lab6_V2.c,155 :: 		PORTB = combineNumbers(left,middle);	// combine num2 and num3
0x004A	0x082E      	MOVF       FARG_assignValues_left, 0
0x004B	0x00B4      	MOVWF      FARG_combineNumbers_first4
0x004C	0x082F      	MOVF       FARG_assignValues_left+1, 0
0x004D	0x00B5      	MOVWF      FARG_combineNumbers_first4+1
0x004E	0x0830      	MOVF       FARG_assignValues_middle, 0
0x004F	0x00B6      	MOVWF      FARG_combineNumbers_last4
0x0050	0x0831      	MOVF       FARG_assignValues_middle+1, 0
0x0051	0x00B7      	MOVWF      FARG_combineNumbers_last4+1
0x0052	0x201C      	CALL       _combineNumbers
0x0053	0x0870      	MOVF       R0, 0
0x0054	0x0086      	MOVWF      PORTB
;EE321_Lab6_V2.c,156 :: 		}
L_end_assignValues:
0x0055	0x0008      	RETURN
; end of _assignValues
_increment:
;EE321_Lab6_V2.c,131 :: 		void increment(){
;EE321_Lab6_V2.c,135 :: 		num1++;
0x0056	0x1283      	BCF        STATUS, 5
0x0057	0x1303      	BCF        STATUS, 6
0x0058	0x0AA2      	INCF       _num1, 1
0x0059	0x1903      	BTFSC      STATUS, 2
0x005A	0x0AA3      	INCF       _num1+1, 1
;EE321_Lab6_V2.c,137 :: 		if(num1 == 10){
0x005B	0x3000      	MOVLW      0
0x005C	0x0623      	XORWF      _num1+1, 0
0x005D	0x1D03      	BTFSS      STATUS, 2
0x005E	0x2861      	GOTO       L__increment15
0x005F	0x300A      	MOVLW      10
0x0060	0x0622      	XORWF      _num1, 0
L__increment15:
0x0061	0x1D03      	BTFSS      STATUS, 2
0x0062	0x2872      	GOTO       L_increment8
;EE321_Lab6_V2.c,138 :: 		num1 = 0;
0x0063	0x01A2      	CLRF       _num1
0x0064	0x01A3      	CLRF       _num1+1
;EE321_Lab6_V2.c,139 :: 		num2++;
0x0065	0x0AA4      	INCF       _num2, 1
0x0066	0x1903      	BTFSC      STATUS, 2
0x0067	0x0AA5      	INCF       _num2+1, 1
;EE321_Lab6_V2.c,141 :: 		if (num2 == 10){
0x0068	0x3000      	MOVLW      0
0x0069	0x0625      	XORWF      _num2+1, 0
0x006A	0x1D03      	BTFSS      STATUS, 2
0x006B	0x286E      	GOTO       L__increment16
0x006C	0x300A      	MOVLW      10
0x006D	0x0624      	XORWF      _num2, 0
L__increment16:
0x006E	0x1D03      	BTFSS      STATUS, 2
0x006F	0x2872      	GOTO       L_increment9
;EE321_Lab6_V2.c,142 :: 		num2 = 0;
0x0070	0x01A4      	CLRF       _num2
0x0071	0x01A5      	CLRF       _num2+1
;EE321_Lab6_V2.c,143 :: 		}
L_increment9:
;EE321_Lab6_V2.c,144 :: 		}
L_increment8:
;EE321_Lab6_V2.c,146 :: 		}
L_end_increment:
0x0072	0x0008      	RETURN
; end of _increment
_reset:
;EE321_Lab6_V2.c,125 :: 		void reset(){
;EE321_Lab6_V2.c,127 :: 		state= 0;
0x0073	0x1283      	BCF        STATUS, 5
0x0074	0x1303      	BCF        STATUS, 6
0x0075	0x01A6      	CLRF       _state
0x0076	0x01A7      	CLRF       _state+1
;EE321_Lab6_V2.c,129 :: 		}
L_end_reset:
0x0077	0x0008      	RETURN
; end of _reset
_main:
0x0078	0x1283      	BCF        STATUS, 5
0x0079	0x1303      	BCF        STATUS, 6
0x007A	0x01A1      	CLRF       _buttonP
0x007B	0x01A2      	CLRF       _num1
0x007C	0x01A3      	CLRF       35
0x007D	0x01A4      	CLRF       _num2
0x007E	0x01A5      	CLRF       37
0x007F	0x01A6      	CLRF       _state
0x0080	0x01A7      	CLRF       39
;EE321_Lab6_V2.c,58 :: 		void main(){
;EE321_Lab6_V2.c,61 :: 		PCON.OSCF = 1;
0x0081	0x1683      	BSF        STATUS, 5
0x0082	0x158E      	BSF        PCON, 3
;EE321_Lab6_V2.c,62 :: 		TRISA = 0xF0;
0x0083	0x30F0      	MOVLW      240
0x0084	0x0085      	MOVWF      TRISA
;EE321_Lab6_V2.c,63 :: 		TRISB = 0x00;
0x0085	0x0186      	CLRF       TRISB
;EE321_Lab6_V2.c,64 :: 		PORTA = 0x00;
0x0086	0x1283      	BCF        STATUS, 5
0x0087	0x0185      	CLRF       PORTA
;EE321_Lab6_V2.c,65 :: 		PORTB = 0x00;
0x0088	0x0186      	CLRF       PORTB
;EE321_Lab6_V2.c,70 :: 		T1CON.T1CKPS0 = 0;
0x0089	0x1210      	BCF        T1CON, 4
;EE321_Lab6_V2.c,71 :: 		T1CON.T1CKPS1 = 1;
0x008A	0x1690      	BSF        T1CON, 5
;EE321_Lab6_V2.c,74 :: 		T1CON.TMR1CS = 0;	// Timer use internal clock
0x008B	0x1090      	BCF        T1CON, 1
;EE321_Lab6_V2.c,76 :: 		TMR1L = 0xDB;	// Timer starts from counting
0x008C	0x30DB      	MOVLW      219
0x008D	0x008E      	MOVWF      TMR1L
;EE321_Lab6_V2.c,77 :: 		TMR1H = 0X0B;	// Upper Limit of the count
0x008E	0x300B      	MOVLW      11
0x008F	0x008F      	MOVWF      TMR1H
;EE321_Lab6_V2.c,79 :: 		T1CON.TMR1ON = 1;	// Timer 1 is on
0x0090	0x1410      	BSF        T1CON, 0
;EE321_Lab6_V2.c,86 :: 		INTCON.GIE = 1;
0x0091	0x178B      	BSF        INTCON, 7
;EE321_Lab6_V2.c,87 :: 		PIE1.TMR1IE = 1; // Turn on Timer 1's interrupt enable
0x0092	0x1683      	BSF        STATUS, 5
0x0093	0x140C      	BSF        PIE1, 0
;EE321_Lab6_V2.c,88 :: 		INTCON.PEIE = 1; // Turn on Peripheral interrupt enable
0x0094	0x170B      	BSF        INTCON, 6
;EE321_Lab6_V2.c,90 :: 		while(1){
L_main0:
;EE321_Lab6_V2.c,105 :: 		if( buttonP == 0 && RA5_bit == 1){
0x0095	0x1283      	BCF        STATUS, 5
0x0096	0x0821      	MOVF       _buttonP, 0
0x0097	0x3A00      	XORLW      0
0x0098	0x1D03      	BTFSS      STATUS, 2
0x0099	0x28B3      	GOTO       L_main4
0x009A	0x1E85      	BTFSS      RA5_bit, BitPos(RA5_bit+0)
0x009B	0x28B3      	GOTO       L_main4
L__main10:
;EE321_Lab6_V2.c,106 :: 		state = (state == 9 ? 0 : state+1); // short if block
0x009C	0x3000      	MOVLW      0
0x009D	0x0627      	XORWF      _state+1, 0
0x009E	0x1D03      	BTFSS      STATUS, 2
0x009F	0x28A2      	GOTO       L__main12
0x00A0	0x3009      	MOVLW      9
0x00A1	0x0626      	XORWF      _state, 0
L__main12:
0x00A2	0x1D03      	BTFSS      STATUS, 2
0x00A3	0x28A7      	GOTO       L_main5
0x00A4	0x01AC      	CLRF       ?FLOC___mainT20
0x00A5	0x01AD      	CLRF       ?FLOC___mainT20+1
0x00A6	0x28AF      	GOTO       L_main6
L_main5:
0x00A7	0x0826      	MOVF       _state, 0
0x00A8	0x3E01      	ADDLW      1
0x00A9	0x00AC      	MOVWF      ?FLOC___mainT20
0x00AA	0x3000      	MOVLW      0
0x00AB	0x1803      	BTFSC      STATUS, 0
0x00AC	0x3E01      	ADDLW      1
0x00AD	0x0727      	ADDWF      _state+1, 0
0x00AE	0x00AD      	MOVWF      ?FLOC___mainT20+1
L_main6:
0x00AF	0x082C      	MOVF       ?FLOC___mainT20, 0
0x00B0	0x00A6      	MOVWF      _state
0x00B1	0x082D      	MOVF       ?FLOC___mainT20+1, 0
0x00B2	0x00A7      	MOVWF      _state+1
;EE321_Lab6_V2.c,107 :: 		}
L_main4:
;EE321_Lab6_V2.c,109 :: 		buttonP = RA5_bit; // Previous value
0x00B3	0x3000      	MOVLW      0
0x00B4	0x1A85      	BTFSC      RA5_bit, BitPos(RA5_bit+0)
0x00B5	0x3001      	MOVLW      1
0x00B6	0x00A1      	MOVWF      _buttonP
;EE321_Lab6_V2.c,112 :: 		if (RA6_bit == 1 ){
0x00B7	0x1F05      	BTFSS      RA6_bit, BitPos(RA6_bit+0)
0x00B8	0x28BA      	GOTO       L_main7
;EE321_Lab6_V2.c,114 :: 		reset();
0x00B9	0x2073      	CALL       _reset
;EE321_Lab6_V2.c,115 :: 		}
L_main7:
;EE321_Lab6_V2.c,118 :: 		assignValues(state,num1,num2);
0x00BA	0x0826      	MOVF       _state, 0
0x00BB	0x00AE      	MOVWF      FARG_assignValues_left
0x00BC	0x0827      	MOVF       _state+1, 0
0x00BD	0x00AF      	MOVWF      FARG_assignValues_left+1
0x00BE	0x0822      	MOVF       _num1, 0
0x00BF	0x00B0      	MOVWF      FARG_assignValues_middle
0x00C0	0x0823      	MOVF       _num1+1, 0
0x00C1	0x00B1      	MOVWF      FARG_assignValues_middle+1
0x00C2	0x0824      	MOVF       _num2, 0
0x00C3	0x00B2      	MOVWF      FARG_assignValues_right
0x00C4	0x0825      	MOVF       _num2+1, 0
0x00C5	0x00B3      	MOVWF      FARG_assignValues_right+1
0x00C6	0x2046      	CALL       _assignValues
;EE321_Lab6_V2.c,120 :: 		}
0x00C7	0x2895      	GOTO       L_main0
;EE321_Lab6_V2.c,122 :: 		}
L_end_main:
0x00C8	0x28C8      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [24]    _interrupt
0x001C      [23]    _combineNumbers
0x0033       [7]    _____DoICP
0x003A      [12]    ___CC2DW
0x0046      [16]    _assignValues
0x0056      [29]    _increment
0x0073       [5]    _reset
0x0078      [81]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0005       [0]    RA5_bit
0x0005       [0]    RA6_bit
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0021       [1]    _buttonP
0x0022       [2]    _num1
0x0024       [2]    _num2
0x0026       [2]    _state
0x0028       [2]    ___DoICPAddr
0x002A       [1]    ___savePCLATH
0x002B       [1]    ___saveSTATUS
0x002C       [2]    ?FLOC___mainT20
0x002E       [2]    FARG_assignValues_left
0x0030       [2]    FARG_assignValues_middle
0x0032       [2]    FARG_assignValues_right
0x0034       [2]    FARG_combineNumbers_first4
0x0036       [2]    FARG_combineNumbers_last4
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x008C       [1]    PIE1
0x008E       [1]    PCON
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_increment8
  L_increment9
  L__main10
  L_end_main
  _main
  L__main12
  L_end_reset
  _reset
  L_end_increment
  _increment
  L__increment15
  L__increment16
  L_end_combineNumbers
  _combineNumbers
  L__combineNumbers18
  L__combineNumbers19
  L_end_assignValues
  _assignValues
  L_end_interrupt
  _interrupt
  L__interrupt22
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_increment8
  L_increment9
  L__main10
  L_end_main
  _main
  L__main12
  L_end_reset
  _reset
  L_end_increment
  _increment
  L__increment15
  L__increment16
  L_end_combineNumbers
  _combineNumbers
  L__combineNumbers18
  L__combineNumbers19
  L_end_assignValues
  _assignValues
  L_end_interrupt
  _interrupt
  L__interrupt22
